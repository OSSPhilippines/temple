<link rel="import" type="component" href="./input.tml" name="tui-input" />
<script>
  import type { ChangeEvent } from '@ossph/temple/dist/types';
  import signal from '@ossph/temple/dist/client/signal';
  const { 
    uploading = 'Uploading...',
    name,
    value,
    change,
    update,
    upload,
    //dont need these...
    style, 'class': _,
    ...attributes 
  } = this.props;
  //determine host class display
  if (!this.classList.contains('block') 
    && !this.classList.contains('flex')
    && !this.classList.contains('none')
    && !this.classList.contains('inline')
    && !this.classList.contains('inline-block')
  ) {
    this.classList.add('inline-block');
  }

  const state = signal({ uploading: false, url: value });

  const handlers = {
    change: (e: ChangeEvent<HTMLInputElement>) => {
      if (upload && e.target.files?.length) {
        state.value = { ...state.value, uploading: true };
        upload(e.target.files[0], url => {
          state.value = { url, uploading: false };
          update && update(url);
        });
      }
      
      change && change(e);
    },
    reset: () => {
      state.value = { uploading: false, url: undefined };
    }
  };
</script>
<if true={!state.value.url && !state.value.uploading}>
  <tui-input 
    {...attributes} 
    type="file" 
    class="block py-4 px-7"
    change={handlers.change} 
  />
<elif true={!state.value.url && state.value.uploading} />
  <div class="bg-white b-black b-solid b-1 border-box tx-black flex flex-center-y p-7">
    <span class="flex-grow scroll-hidden tx-ellipsis tx-nowrap">
      {uploading}
    </span>
  </div>
<elif true={state.value.url} />
  <div class="bg-white b-black b-solid b-1 border-box tx-black flex flex-center-y p-7">
    <a 
      class="flex-grow scroll-hidden tx-ellipsis tx-nowrap tx-black tx-underline"
      href={state.value.url} 
      target="_blank" 
      rel="noreferrer"
    >
      {state.value.url}
    </a>
    <div 
      class="tx-error cursor-pointer tx-20 mt--2"
      click={handlers.reset}
    >
      &times;
    </div>
    <input {name} type="hidden" value={state.value.url} />
  </div>
</if>