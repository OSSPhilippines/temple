<link rel="import" type="template" href="@/templates/html-head.tml" />
<link rel="import" type="template" href="@/templates/panel-head.tml" />
<link rel="import" type="template" href="@/templates/panel-left.tml" />
<link rel="import" type="component" href="@/components/panel-main.tml" />
<link rel="import" type="component" href="@/components/window-app.tml" />
<link rel="import" type="component" href="@/components/code-snippet.tml" />
<link rel="import" type="component" href="@/components/tui-tab.tml" />
<link rel="import" type="component" href="@/components/tui-alert.tml" />
<script>
  //This is ran on both the server and the browser
  //There is no signal, children prop here because 
  //this is not a component.
  //
  //We also need to becareful with importing browser 
  //scripts here. You should do that in the <head>
  //instead.
  import { env } from '@ossph/temple';
  const url = '/docs/';
  const title = 'Getting Started - Temple reactive web component template engine.';
  const description = 'Temple is a template engine hat generates web components and support reactivity.';
  const toggle = _ => {
    document.body.classList.toggle('panel-left-open');
  };

  const examples = 'https://github.com/OSSPhilippines/temple/tree/main/examples';
</script>
<html>
  <html-head />
  <body class="dark panel with-head with-left">
    <panel-head />
    <panel-left />
    <panel-main class="panel-main">
      <div class="docs container">
        <h1>Getting Started</h1>
        <p>
          To use Temple in a project, run the following commands in terminal: 
        </p>
        <window-app title="Terminal">
          <code-snippet lang="bash">
            npm install --save @ossph/temple && npm install --save-dev ts-node typescript
          </code-snippet>
        </window-app>
        <tui-alert solid curved info>
          <i class="fas fa-info-circle"></i>
          &nbsp;
          Download the Temple editor plugin at the <a 
            target="_blank" 
            href="https://marketplace.visualstudio.com/items?itemName=ossph.temple-language"
          >Visual Studio Marketplace</a>.
        </tui-alert>
        <p>
          Create a server file called
          <code-snippet lang="js" inline>'src/index.ts'</code-snippet> 
          with the following code that uses the compiler.
        </p>
        <window-app title="src/index.ts">
          <code-snippet lang="js" numbers trim detab={12}>{`
            //on server:
            import temple from '@ossph/temple/compiler';
            //make a temple compiler
            const compiler = temple();
            //render HTML
            const results = compiler.render('./page.dtml');
            //show HTML
            console.log(results);
          `}</code-snippet>
        </window-app>
        <p>
          Next, create a document file called
          <code-snippet lang="js" inline>'src/page.dtml'</code-snippet> 
          with the following template code.
        </p>
        <window-app title="src/page.dtml">
          <code-snippet numbers trim detab={12}>{`
            <style>
              .title { text-align: center; }
            </style>
            <script>
              const title = 'Hello World';
            </script>
            <html>
              <head>
                <title>{title}</title>
              </head>
              <body>
                <h1 class="title">{title}</h1>
              </body>
            </html>
          `}</code-snippet>
        </window-app>
        <p>
          To test the script and see the results, run the following 
          command in terminal.
        </p>
        <window-app title="Terminal">
          <code-snippet lang="bash">
            npx ts-node src/index.ts
          </code-snippet>
        </window-app>
        <p>
          To see other getting started examples with various frameworks,
          you can check out the following links.
        </p>
        <ul>
          <li>
            <a target="_blank" href={`${examples}/with-http`}>
              Node HTTP
            </a>
          </li>
          <li>
            <a target="_blank" href={`${examples}/with-express`}>
              ExpressJS
            </a>
          </li>
          <li>
            <a target="_blank" href={`${examples}/with-fastify`}>
              Fastify
            </a>
          </li>
          <li>
            <a target="_blank" href={`${examples}/with-hapi`}>
              Hapi
            </a>
          </li>
          <li>
            <a target="_blank" href={`${examples}/with-koa`}>
              Koa
            </a>
          </li>
          <li>
            <a target="_blank" href={`${examples}/with-nest`}>
              NestJS
            </a>
          </li>
          <li>
            <a target="_blank" href={`${examples}/with-restify`}>
              Restify
            </a>
          </li>
          <li>
            <a target="_blank" href={`${examples}/with-webpack`}>
              Webpack
            </a>
          </li>
        </ul> 
        <p>
          Depending on how you plan to use Temple, you can also look at 
          the following project modes.
        </p>
        <ul>
          <li>
            <a href="/temple/docs/engine.html">
              Template Engine
            </a>
          </li>
          <li>
            <a href="/temple/docs/spa.html">
              Single Page App
            </a>
          </li>
          <li>
            <a href="/temple/docs/static-sites.html">
              Static Site Generator
            </a>
          </li>
          <li>
            <a href="/temple/docs/publisher.html">
              Web Component Publisher
            </a>
          </li>
        </ul>
        <nav class="pager">
          <a class="prev" href="/temple/docs/index.html">
            <i class="fas fa-fw fa-chevron-left"></i>
            Documentation
          </a>
          <a class="next" href="/temple/docs/questions.html">
            Questions &amp; Answers
            <i class="fas fa-fw fa-chevron-right"></i>
          </a>
        </nav>
      </div>
      <footer class="foot"></footer>
    </panel-main>
  </body>
</html>