<link rel="import" type="template" href="@/components/html/head.tml" name="html-head" />
<link rel="import" type="template" href="@/components/html/header.tml" name="html-header" />
<link rel="import" type="template" href="@/components/html/aside.tml" name="html-aside" />
<link rel="import" type="component" href="@ossph/temple-ui/panel/layout.tml" name="panel-layout" />
<link rel="import" type="component" href="@ossph/temple-ui/panel/head.tml" name="panel-head" />
<link rel="import" type="component" href="@ossph/temple-ui/panel/left.tml" name="panel-left" />
<link rel="import" type="component" href="@ossph/temple-ui/panel/main.tml" name="panel-main" />
<link rel="import" type="component" href="@/components/api/docs.tml" name="api-docs" />
<link rel="import" type="component" href="@/components/ide/app.tml" name="ide-app" />
<link rel="import" type="component" href="@/components/ide/code.tml" name="ide-code" />
<link rel="import" type="component" href="@/components/ide/preview.tml" name="ide-preview" />
<link rel="import" type="component" href="@/components/i18n/translate.tml" name="i18n-translate" />
<style>
  @tui reset;
  @tui fouc-opacity;
  @tui theme;
  @tui block;
  @tui utilities;
</style>
<script>
  import { env } from '@ossph/temple';
  import { _ } from '@/modules/i18n';

  const url = '/docs/index.html';
  const title = _('Documentation - Temple reactive web component template engine.');
  const description = _('Temple is a template engine hat generates web components and support reactivity.');
  const toggle = () => {
    document.getElementsByTagName('panel-layout')[0].toggle('left');
  };
</script>
<html>
  <html-head />
  <body class="dark bg-t-0 tx-t1 arial">
    <panel-layout>
      <panel-head><html-header /></panel-head>
      <panel-left><html-aside /></panel-left>
      <panel-main>
        <api-docs>
          <h1 class="tx-primary tx-uppercase tx-30 py-20">
            {_('Documentation')}
          </h1>

          <i18n-translate p trim class="tx-lh-36 py-20">
            Temple is a template engine with a built-in compiler that 
            generates HTML markup, web components and support reactivity. 
          </i18n-translate>
          <i18n-translate p trim class="tx-lh-36 py-20">
            Like React and Svelte, Temple is a modern approach to building
            front-end code addressing state management and reactivity. 
            Unlike React and Svelte that focus on keeping the developer 
            experience mostly on the front-end, Temple focuses on being 
            a modern templating solution for server side frameworks.
          </i18n-translate>
          <i18n-translate p trim class="tx-lh-36 py-20">
            Temple can be used as a template engine on the server side, 
            as a site generator to make static websites and single page 
            applications, or can be used to publish native HTML5 web 
            components.
          </i18n-translate>
          <i18n-translate p trim class="tx-lh-36 py-20">
            Temple sticks closely to the classic web development model of 
            HTML, CSS, and JS, just adding a few extensions to HTML and 
            JavaScript. It arguably has fewer concepts and tools to learn 
            than some of the other framework options.
          </i18n-translate>
          <ide-app title="Basic Example" class="py-20">
            <div class="flex bg-h-EFEFEF h-full lg-block">
              <ide-code class="basis-half" numbers trim detab={16}>{`
                <style>
                  h1 { font-weight: bold; }
                </style>
                <script>
                  const name = 'world';
                </script>
                <h1>Hello {name}!</h1>
              `}</ide-code>
              <ide-preview class="bg-white basis-half h-140 lg-h-auto">
                <div>
                  <h1>Hello world!</h1>
                </div>
              </ide-preview>
            </div>
          </ide-app>
          <i18n-translate p trim class="tx-lh-36 py-20">
            At it's core, a temple file is a special template file that 
            allows HTML, JavaScript, CSS and importing of components and 
            templates. All of which are transpiled to TypeScript or 
            JavaScript source code.
          </i18n-translate>
          <ide-app title="Transpiler Example" class="py-20">
            <div class="flex bg-h-EFEFEF h-full lg-block">
              <ide-code class="basis-half scroll-auto" scroll numbers ltrim detab={16}>{`
                <style>
                  h1 { font-weight: bold; }
                </style>
                <script>
                  import { props } from '@ossph/temple';
                  const { name } = props();
                </script>
                <h1>Hello {name}!!</h1>
                
                

              `}</ide-code>
              <ide-code class="basis-half h-full bd-t-1 bd-solid bdy-0 bdl-1 bdr-0 lg-bd-0 lg-h-auto scroll-auto" lang="js" trim scroll detab={16}>{`
                import { props } from '@ossph/temple';
                export default class Hello extends TempleComponent {
                  styles() {
                    return 'h1 { font-weight: bold; }';
                  }
                  template() {
                    const { name } = props();
                    return () => [
                      TempleRegistry.createElement('h1', null, \`Hello \${name}\`)
                    ]
                  }
                }
              `}</ide-code>
            </div>
          </ide-app>

          <nav class="flex">
            <a class="flex-grow tx-right tx-primary py-40" href="/temple/docs/getting-started.html">
              {_('Getting Started')}
              <i class="fas fa-fw fa-chevron-right tx-t-1"></i>
            </a>
          </nav>
          <footer class="foot"></footer>
        </api-docs>
      </panel-main>
    </panel-layout>
  </body>
</html>