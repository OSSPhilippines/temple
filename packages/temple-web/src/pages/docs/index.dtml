<link rel="import" type="template" href="@/templates/html-head.tml" />
<link rel="import" type="template" href="@/templates/panel-head.tml" />
<link rel="import" type="template" href="@/templates/panel-left.tml" />
<link rel="import" type="component" href="@/components/panel-main.tml" />
<link rel="import" type="component" href="@/components/window-app.tml" />
<link rel="import" type="component" href="@/components/code-snippet.tml" />
<link rel="import" type="component" href="@/components/dev-ui.tml" />
<script>
  //This is ran on both the server and the browser
  //There is no signal, children prop here because 
  //this is not a component.
  //
  //We also need to becareful with importing browser 
  //scripts here. You should do that in the <head>
  //instead.
  import { env } from '@ossph/temple';
  const url = '/docs/';
  const title = 'Documentation - Temple reactive web component template engine.';
  const description = 'Temple is a template engine hat generates web components and support reactivity.';
  const toggle = _ => {
    document.body.classList.toggle('panel-left-open');
  };
</script>
<html>
  <html-head />
  <body class="dark panel with-head with-left">
    <panel-head />
    <panel-left />
    <panel-main class="panel-main">
      <div class="docs container">
        <h1>Documentation</h1>
        <p>
          Temple is a template engine with a built-in compiler that 
          generates HTML markup, web components and support reactivity. 
        </p>
        <p>
          Temple can be used as a template engine on the server side, as a
          site generator to make static websites and single page 
          applications, and can be used to publish native HTML5 web 
          components. The focus of the Temple project are the following.
        </p>
        <div class="tbl-container">
          <table class="tbl">
            <thead>
              <th>Features</th>
              <th>De-Features</th>
            </thead>
            <tbody>
              <tr>
                <td>Template Engine</td>
                <td>No Hydration</td>
              </tr>
              <tr>
                <td>Web Components</td>
                <td>No Hooks</td>
              </tr>
              <tr>
                <td>Server First</td>
                <td>No Memo</td>
              </tr>
              <tr>
                <td>Reactive Signals</td>
                <td>No Brandcuffs</td>
              </tr>
            </tbody>
          </table>
        </div>
        <p>
          At it's core, a temple file is a special template file that 
          allows HTML, JavaScript, CSS and importing of components and 
          templates. All of which are transpiled to its respective 
          TypeScript or JavaScript source code.
        </p>
        <window-app title="Transpiler Example">
          <div class="snippet-preview">
            <code-snippet numbers>{`
              <style>
                h1 { font-weight: bold; }
              </style>
              <script>
                import { props } from '@ossph/temple';
                const { name } = props();
              </script>
              <h1>Hello {name}!!</h1>
              \n\n\n.
            `.replace(new RegExp(`\\n {${14}}`, 'g'), '\n')
            }</code-snippet>
            <code-snippet lang="js" trim>{`
              import { props } from '@ossph/temple';
              export default class Hello extends TempleComponent {
                styles() {
                  return 'h1 { font-weight: bold; }';
                }
                template() {
                  const { name } = props();
                  return () => [
                    TempleRegistry.createElement('h1', null, \`Hello \${name}\`)
                  ]
                }
              }
            `.replace(new RegExp(`\\n {${14}}`, 'g'), '\n')
            }</code-snippet>
          </div>
        </window-app>
        <nav class="pager">
          <a class="next" href="/temple/docs/started.html">
            Getting Started
            <i class="fas fa-fw fa-chevron-right"></i>
          </a>
        </nav>
      </div>
      <footer class="foot"></footer>
    </panel-main>
  </body>
</html>