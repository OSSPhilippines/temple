<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/9000.0.1/themes/prism.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/9000.0.1/themes/prism-tomorrow.min.css" />
<style>
  :host {
    display: block;
    font-size: 14px;
    line-height: 20px;
    overflow: auto;
  }
  :host([inline]) {
    display: inline;
  }
  :host([inline]),
  :host([inline]) > pre,
  :host([inline]) > pre > code {
    display: inline;
  }
  .snippet {
    background-color: #101113;
    color: #ABB2BF;
    margin: 0;
    padding: 0;
  }

  .line-numbers {
    position: relative;
    padding-left: 3.8em;
    counter-reset: linenumber;
  }
  :host([inline]) .line-numbers {
    position: static;
    padding-left: 0;
  }

  .line-numbers > code {
    position: relative;
    white-space: inherit;
  }

  .line-numbers .line-numbers-rows {
    position: absolute;
    pointer-events: none;
    top: 0;
    font-size: 100%;
    left: -3.8em;
    width: 3em; /* works for line-numbers below 1000 lines */
    letter-spacing: -1px;
    border-right: 1px solid #999;

    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

  }

  :host([inline]) .line-numbers .line-numbers-rows {
    display: none;
  }

  .line-numbers-rows > span {
    display: block;
    counter-increment: linenumber;
  }

  .line-numbers-rows > span:before {
    content: counter(linenumber);
    color: #999;
    display: block;
    padding-right: 0.8em;
    text-align: right;
  }

  .terminal {
    background-color: #000000;
    font-size: 15px;
    padding: 10px;
  }
  .terminal span {
    color: #00FF00;
  }
</style>
<script>
  import Prism from 'prismjs';
  import { props, children } from '@ossph/temple';
  const { lang = 'markup', inline = false } = props();
  const snippet = children()[0];

  const highlight = event => {
    const code = Prism.highlight(
      snippet.textContent, 
      Prism.languages[lang], 
      lang
    );
    const match = code.match(/\n(?!$)/g);
    const total = match ? match.length + 1 : 1;
    const lines = new Array(total + 1).join('<span></span>');
    const wrapper = document.createElement('span');

    wrapper.setAttribute('aria-hidden', 'true');
    wrapper.className = 'line-numbers-rows';
    wrapper.innerHTML = lines;

    event.detail.target.innerHTML = code;
    if (!inline) {
      event.detail.target.appendChild(wrapper);
    }
  };
</script>
<if true={lang === 'bash'}>
  <div class="terminal"><span>$</span> {children()}</div>
<else />
  <pre class="snippet line-numbers"><code mount=highlight></code></pre>
</if>

